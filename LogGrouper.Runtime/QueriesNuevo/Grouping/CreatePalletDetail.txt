--STEP3
--AGREGA EL PEDIDO AL PALLET

DECLARE @DROPID NVARCHAR(50)
DECLARE @PACKAGE NVARCHAR(50)
DECLARE @ORDERSTATUS NVARCHAR(50)
DECLARE @HOSTPROCESSREQUIRED NVARCHAR(50)
DECLARE @TRANSPORT NVARCHAR(50)
DECLARE @TRANSPORT_DESCR NVARCHAR(50)
DECLARE @LOG NVARCHAR(50)
DECLARE @NEW_DROPID NVARCHAR(50)
DECLARE @ORDERGROUP NVARCHAR(50)
DECLARE @GROUP NVARCHAR(50)

SELECT @DROPID = DROPID 
FROM {Scheme}.AGRUPADO_DETALLE AD WHERE NUMEROPEDIDO = '{Order_Id}' AND BULTOS = '{Package_Id}'

IF (@DROPID IS NULL) --Si tiene DropId valido que el estado sea 75
BEGIN
	SELECT @ORDERGROUP = ORDERGROUP FROM {Scheme}.ORDERS WHERE REFERENCEDOCUMENT = '{Order_Id}'
	SELECT @ORDERSTATUS = STATUS FROM {Scheme}.ORDERS WHERE REFERENCEDOCUMENT = '{Order_Id}'

	IF((@ORDERSTATUS = '75' AND @ORDERGROUP = '') OR (@ORDERSTATUS = '95' AND @ORDERGROUP = '')) --Si esta en estado 75 y no tenga ordergroup / Si esta en estado 95 agrupo una orden que ya fue expedida	
	--IF(@ORDERSTATUS = '75') --Si esta en estado 75 valido que no este cancelado
	BEGIN
		SELECT @HOSTPROCESSREQUIRED = HOSTPROCESSREQUIRED FROM {Scheme}.ORDERS WHERE REFERENCEDOCUMENT = '{Order_Id}'

		IF(@HOSTPROCESSREQUIRED = '0') --Si no esta cancelado obtengo el transporte y agrego el pedido.
		BEGIN

			SELECT @GROUP = cl.EXT_UDF_STR7
			from {Scheme}.ORDERS o 
			inner join {Scheme}.CODELKUP cl on cl.CODE = {Scheme}.GetNumeric(C_ADDRESS4) and LISTNAME = 'CONFIGFRE1'
			where o.REFERENCEDOCUMENT =  '{Order_Id}'

			SELECT @TRANSPORT = SUSR4 FROM {Scheme}.ORDERS WHERE REFERENCEDOCUMENT = '{Order_Id}'
			SELECT @TRANSPORT_DESCR = DESCRIPTION FROM {Scheme}.CODELKUP WHERE LISTNAME = 'TRANSPFAR' AND CODE = @TRANSPORT
			--SELECT TOP 1 @LOG = DROPID FROM {Scheme}.DROPID WHERE STATUS = 'AP' AND DROPIDTYPE = '10' AND DRUDF3 = @TRANSPORT AND ISNULL(EXT_UDF_STR1,'') = @GROUP

			IF(@GROUP is null)
			BEGIN
				IF('{IsEvent}' = '0')
				BEGIN
					SELECT TOP 1 @LOG = DROPID FROM {Scheme}.DROPID WHERE STATUS = 'AP' AND DROPIDTYPE = '10' AND DRUDF3 = @TRANSPORT
				END
				ELSE				
				BEGIN
					SELECT TOP 1 @LOG = DROPID FROM {Scheme}.DROPID WHERE STATUS = 'AP' AND DROPIDTYPE = '10' AND DRUDF3 = @TRANSPORT AND ADDWHO = '{User}'
				END
			END
			ELSE
			BEGIN
				IF('{IsEvent}' = '0')
				BEGIN
					SELECT TOP 1 @LOG = DROPID FROM {Scheme}.DROPID WHERE STATUS = 'AP' AND DROPIDTYPE = '10' AND DRUDF3 = @TRANSPORT AND EXT_UDF_STR1 = @GROUP
				END
				ELSE
				BEGIN
					SELECT TOP 1 @LOG = DROPID FROM {Scheme}.DROPID WHERE STATUS = 'AP' AND DROPIDTYPE = '10' AND DRUDF3 = @TRANSPORT AND EXT_UDF_STR1 = @GROUP AND ADDWHO = '{User}'
				END
			END

			INSERT INTO {Scheme}.AGRUPADO_DETALLE (DROPID,ORDERKEY,CODIGOET,BULTOS,SUCURSAL,IDCLIENTE,NUMEROPEDIDO,TRANSPORTECODIGO,TRANSPORTE,USUARIO,FECHA) 
			SELECT 
			@LOG DROPID,
			ORDERKEY,
			'{Label_Id}' CODIGOET,
			'{Package_Id}' BULTOS,
			ISNULL(EXT_UDF_STR3, '0') SUCURSAL,
			B_CONTACT1 IDCLIENTE,
			REFERENCEDOCUMENT NUMEROPEDIDO,
			SUSR4 TRANSPORTECODIGO,
			@TRANSPORT_DESCR TRANSPORTE,
			'{User}' USUARIO, 
			GETDATE() FECHA FROM {Scheme}.ORDERS WHERE STORERKEY = '{Storerkey}' AND REFERENCEDOCUMENT = '{Order_Id}'

			SELECT NUMEROPEDIDO AS OrderId FROM {Scheme}.AGRUPADO_DETALLE WHERE NUMEROPEDIDO = '{Order_Id}'

		END
		ELSE
		BEGIN
			SELECT 'ERROR: Pedido cancelado.' AS OrderId
			RETURN
		END
	END
	ELSE
	BEGIN
		SELECT 'ERROR: Pedido en estado incorrecto.' AS OrderId
		RETURN
	END
END
ELSE 
BEGIN
SELECT 'ERROR: El pedido ya se encuentra agrupado en el pallet: ' + @DROPID AS OrderId
END